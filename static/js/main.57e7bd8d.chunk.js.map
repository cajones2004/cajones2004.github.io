{"version":3,"sources":["images/placeholder3.jpg","logo.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","changeCurrentArticle","newArticleDate","localStorage","setItem","window","location","reload","changeCurrentTag","newTag","generateAboutCard","Card","elevation","CardActionArea","CardContent","Typography","gutterBottom","variant","component","color","generateArticleCard","targetDate","targetTag","articles","i","date","output","CardMedia","alt","height","image","require","title","String","substring","content","CardActions","Grid","container","alignItems","justify","direction","Button","size","tag","onClick","number_of_articles","ElevationScroll","props","children","trigger","useScrollTrigger","disableHysteresis","threshold","target","undefined","React","cloneElement","console","log","articlesJSON","ArticleBody","state","_this","this","serverRequest","axios","get","then","result","data","setState","forceUpdate","abort","getItem","mediaQuery","gridItems","push","item","xs","leftGrid","rightGrid","spacing","generateArticlesFromJSON","paragraphs","split","p","generateFullPageArticleCard","Component","App","useState","anchorEl","setAnchorEl","useMediaQuery","className","CssBaseline","AppBar","Toolbar","href","aria-controls","aria-haspopup","event","currentTarget","Menu","id","keepMounted","open","Boolean","onClose","MenuItem","Container","style","textAlign","Chip","label","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.57e7bd8d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/placeholder3.c0d35eb1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.fd0e0d02.svg\";","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Button from '@material-ui/core/Button';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\nimport Box from '@material-ui/core/Box';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Divider from '@material-ui/core/Divider'\nimport Fab from '@material-ui/core/Fab'\nimport Modal from '@material-ui/core/Modal';\nimport Chip from '@material-ui/core/Chip'\nimport LabelImportantIcon from '@material-ui/icons/LabelImportant';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InstagramIcon from '@material-ui/icons/Instagram';\n// import articles from './articles.json'\nimport articlesJSON from './articles.json'\nimport axios from 'axios'\nconsole.log('opened local JSON ')\nconsole.log(articlesJSON)\n\n// localStorage.setItem('article', 0)\n// localStorage.setItem('tag', 'all')\n\nfunction changeCurrentArticle(newArticleDate) {\n  localStorage.setItem('article', newArticleDate)\n  window.location.reload()\n}\n\nfunction changeCurrentTag(newTag) {\n  localStorage.setItem('tag', newTag)\n  window.location.reload()\n}\n\nfunction generateArticlesFromJSON(tag, mediaQuery, articles) {\n  // convert the set of articles from JSON into JSX cards\n  // default tag is 'all' to show articles of all tags\n  let width = 12\n  if (mediaQuery) width = 6\n  let gridItems = []\n  for (let i = 0; i < articles.number_of_articles; i++) {\n    if (tag == 'all' || String(articles.articles[i].tag) == tag) {\n      gridItems.push(<Grid item xs={12}>{generateArticleCard(articles.articles[i].date, tag, articles)}</Grid>)\n    }\n  }\n  // for (let article of articles.articles) {\n  //   if (tag == 'all' || String(article.tag) == tag) {\n  //     gridItems.push(<Grid item xs={12}>{generateArticleCard(article.date, tag, articles)}</Grid>)\n  //   } \n  // }\n\n  let leftGrid = []\n  let rightGrid = []\n  for (let i = 0; i < articles.number_of_articles; i++) {\n    if (i % 2 == 0) {\n      leftGrid.push(gridItems[i])\n    } else {\n      rightGrid.push(gridItems[i])\n    }\n  }\n  if (mediaQuery) {\n    return (\n      <>\n      <Grid container spacing={6} alignItems='center' justify='center'>\n        <Grid item xs={6}>{generateAboutCard()}</Grid>\n      </Grid>\n      <br />\n      <br />\n      <br />\n      <Grid container spacing={6} alignItems='center' justify='center'>\n        <Grid container xs={6} item spacing={3}  alignItems='center' justify='center'>\n          {leftGrid}\n        </Grid>\n        <Grid container xs={6} item spacing={3}  alignItems='center' justify='center'>\n          {rightGrid}\n        </Grid>\n      </Grid>\n      </>\n    )\n  } else {\n    return (\n      <>\n      <Grid container spacing={3}><Grid item xs={12}>{generateAboutCard()}</Grid></Grid>\n      <Grid container spacing={3}>\n        {gridItems}\n      </Grid>\n      </>\n    )\n  }\n}\n\nfunction generateAboutCard() {\n  return (\n    <Card elevation={20}>\n          <CardActionArea>\n            <CardContent>\n              <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                overwatched\n              </Typography>\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                Overwatched is your place to go for all Overwatch news etc etc etc etc\n              </Typography>\n            </CardContent>\n          </CardActionArea>\n    </Card>\n  )\n}\n\nfunction generateArticleCard(targetDate, targetTag, articles) {\n  // generates a card for the article with the specified date ID\n  for (let i = 0; i < articles.number_of_articles; i++) {\n    if (articles.articles[i].date == targetDate) {\n      var output = (\n        <Card elevation={20}>\n          <CardActionArea>\n            <CardMedia\n              component=\"img\"\n              alt=\"cover image failed to load\"\n              height=\"140\"\n              image={require('./images/placeholder3.jpg')}\n              title=\"article\"\n            />\n            <CardContent>\n              <Typography variant=\"caption\" color=\"textSecondary\" gutterBottom>\n                {String(articles.articles[i].date).substring(0,4) + '/' + String(articles.articles[i].date).substring(4,6) + '/' + String(articles.articles[i].date).substring(6,8)}\n              </Typography>\n              <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                {articles.articles[i].title}\n              </Typography>\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                {String(articles.articles[i].content).substring(0, 140) + '...'}\n              </Typography>\n            </CardContent>\n          </CardActionArea>\n          <CardActions>\n            <Grid container alignItems=\"flex-start\" justify=\"flex-start\" direction=\"row\">\n              <Button size=\"small\" color=\"success\">\n                <LabelImportantIcon />\n                {articles.articles[i].tag}\n              </Button>\n            </Grid>\n            <Grid container alignItems=\"flex-start\" justify=\"flex-end\" direction=\"row\">\n              <Button size=\"small\" color=\"primary\" onClick={() => changeCurrentArticle(articles.articles[i].date)}>\n                Read More\n              </Button>\n            </Grid>\n          </CardActions>\n        </Card>\n      )\n    }\n  }\n  // for (let x of articles.articles) {\n  //   if (x.date == targetDate) {\n  //     var output = (\n  //       <Card elevation={20}>\n  //         <CardActionArea>\n  //           <CardMedia\n  //             component=\"img\"\n  //             alt=\"cover image failed to load\"\n  //             height=\"140\"\n  //             image={require('./images/placeholder3.jpg')}\n  //             title=\"article\"\n  //           />\n  //           <CardContent>\n  //             <Typography variant=\"caption\" color=\"textSecondary\" gutterBottom>\n  //               {String(x.date).substring(0,4) + '/' + String(x.date).substring(4,6) + '/' + String(x.date).substring(6,8)}\n  //             </Typography>\n  //             <Typography gutterBottom variant=\"h5\" component=\"h2\">\n  //               {x.title}\n  //             </Typography>\n  //             <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n  //               {String(x.content).substring(0, 140) + '...'}\n  //             </Typography>\n  //           </CardContent>\n  //         </CardActionArea>\n  //         <CardActions>\n  //           <Grid container alignItems=\"flex-start\" justify=\"flex-start\" direction=\"row\">\n  //             <Button size=\"small\" color=\"success\">\n  //               <LabelImportantIcon />\n  //               {x.tag}\n  //             </Button>\n  //           </Grid>\n\n  //           <Grid container alignItems=\"flex-start\" justify=\"flex-end\" direction=\"row\">\n  //             <Button size=\"small\" color=\"primary\" onClick={() => changeCurrentArticle(x.date)}>\n  //               Read More\n  //             </Button>\n  //           </Grid>\n  //         </CardActions>\n  //       </Card>\n  //     )\n  //   }\n  // }\n  return output\n}\n\nfunction generateFullPageArticleCard(targetDate, articles) {\n//   // generates a card for the article with the specified date ID\n  \n  // for (let x of articles.articles) {\n  for (let i = 0; i < articles.number_of_articles; i++) {\n    if (articles.articles[i].date == targetDate) {\n      console.log(String((articles.articles[i].content)))\n\n      let paragraphs = []\n      for (let p of String(articles.articles[i].content).split('\\n')) {\n        paragraphs.push(\n          <>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                {p}\n          </Typography>\n          <br />\n          </>\n        )\n      }\n\n      var output = (\n        <Card elevation={20}>\n          <CardActionArea>\n            <CardMedia\n              component=\"img\"\n              alt=\"cover image failed to load\"\n              height=\"140\"\n              image={require('./images/placeholder3.jpg')}\n              title=\"article\"\n            />\n            <CardContent>\n              \n              <Typography variant=\"caption\" color=\"textSecondary\" gutterBottom>\n              {String(articles.articles[i].date).substring(0,4) + '/' + String(articles.articles[i].date).substring(4,6) + '/' + String(articles.articles[i].date).substring(6,8)}\n              </Typography>\n              <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                {articles.articles[i].title}\n              </Typography>\n              <Typography variant='subtitle1' color=\"textSecondary\" gutterBottom>\n                {/* <Button size=\"small\" color=\"success\"> */}\n                  <LabelImportantIcon />\n                  {articles.articles[i].tag}\n                {/* </Button> */}\n              </Typography>\n              {paragraphs}\n            </CardContent>\n          </CardActionArea>\n          <CardActions>\n            <Button size=\"small\" color=\"primary\" onClick={() => changeCurrentArticle(0)}>\n              More Articles\n            </Button>\n          </CardActions>\n          <CardActions>\n            <Button size=\"small\" color=\"success\">\n              <LabelImportantIcon />\n              {articles.articles[i].tag}\n            </Button>\n          </CardActions>\n          \n        </Card>\n      )\n    }\n  }\n  return output\n}\n\nfunction ElevationScroll(props) {\n  const { children, window } = props;\n  // Note that you normally won't need to set the window ref as useScrollTrigger\n  // will default to window.\n  // This is only being set here because the demo is in an iframe.\n  const trigger = useScrollTrigger({\n    disableHysteresis: true,\n    threshold: -1,\n    target: window ? window() : undefined,\n  });\n\n  return React.cloneElement(children, {\n    elevation: trigger ? 4 : 0,\n  });\n}\n\nfunction footer() {\n  return (\n    <>\n    <Grid container spacing={2} alignItems='center' justify='center'>\n      <Grid item xs={12}><a href='https://github.com/cajones2004/overwatch-news'><Chip label='source code'/></a></Grid>   \n      <Grid item xs={12}><Chip label='© Copyright  - Cameron Jones 2020'/></Grid>        \n    </Grid>\n    <br />\n    </>\n  )\n}\n\n\n\nclass ArticleBody extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n        articles: {}\n    };\n}\n\n  componentDidMount() {\n    var _this = this;\n    this.serverRequest = \n      axios\n        .get(\"https://raw.githubusercontent.com/cajones2004/cajones2004.github.io/dev/src/articles.json\")\n        .then(function(result) {\n          console.log('received ' + typeof(result.data.articles) +' from GitHub rawusercontent: ')\n          console.log(result.data.articles)    \n          _this.setState({\n            articles: result.data\n          });\n          _this.forceUpdate()\n        })\n  }\n\n  componentWillUnmount() {\n    this.serverRequest.abort();\n  }\n\n  render() {\n    console.log('rendering from local JSON')\n    if (localStorage.getItem('article') == 0) {\n      return (\n        <>\n          {generateArticlesFromJSON(localStorage.getItem('tag'), localStorage.getItem('desktop'), articlesJSON)}\n        </>\n      )\n    } else {\n      return (\n        <>\n          {generateFullPageArticleCard(localStorage.getItem('article'), articlesJSON)}\n        </>\n      )\n    }\n  }\n}\n\nfunction App() {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  localStorage.setItem('desktop', useMediaQuery('(min-width:768px)'))\n  // if (localStorage.getItem('article') == 0){\n    return (\n      <div className=\"App\">\n        <CssBaseline />\n                <ElevationScroll {...{}}>\n                  <AppBar color='blank' elevation={20}>\n                    <Toolbar>\n                      <Typography variant=\"h6\">overwatched.site</Typography>\n                      <Grid container alignItems=\"flex-start\" justify=\"flex-end\" direction=\"row\">\n                          <a href='https://www.instagram.com/overwatched.site/'><Button >\n                            <InstagramIcon />\n                          </Button></a>\n                        <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\n                          Browse by category\n                        </Button>\n                        <Menu\n                          id=\"simple-menu\"\n                          anchorEl={anchorEl}\n                          keepMounted\n                          open={Boolean(anchorEl)}\n                          onClose={handleClose}\n                        >\n                          <MenuItem onClick={() => changeCurrentTag('all')}>All</MenuItem>\n                          <MenuItem onClick={() => changeCurrentTag('overwatch league')}>Overwatch League</MenuItem>\n                          <MenuItem onClick={() => changeCurrentTag('power rankings')}>Power Rankings</MenuItem>\n                          <MenuItem onClick={() => changeCurrentTag('run it back')}>Run It Back</MenuItem>\n                          <MenuItem onClick={() => changeCurrentTag('overwatch world cup')}>Overwatch World Cup</MenuItem>\n                        </Menu>\n                      </Grid>\n                    </Toolbar>\n                  </AppBar>\n                </ElevationScroll>\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <Container>\n          <ArticleBody />\n          {/* {generateArticlesFromJSON(localStorage.getItem('tag'), desktopQuery)} */}\n        </Container>\n        <br />\n        <br />\n        <br />\n        <Container style={{textAlign: 'center'}}>\n          {footer()}\n          <br />\n        </Container>\n      </div>\n    )\n  // } else {\n    // return (\n    //   <div className=\"App\">\n    //     <CssBaseline />\n    //             <ElevationScroll {...{}}>\n    //               <AppBar color='blank' elevation={20}>\n    //                 <Toolbar>\n    //                   <Typography variant=\"h6\">overwatched.site</Typography>\n    //                   <Grid container alignItems=\"flex-start\" justify=\"flex-end\" direction=\"row\">\n    //                       <a href='https://www.instagram.com/overwatched.site/'><Button >\n    //                         <InstagramIcon />\n    //                       </Button></a>\n    //                     <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\n    //                       Browse by category\n    //                     </Button>\n    //                     <Menu\n    //                       id=\"simple-menu\"\n    //                       anchorEl={anchorEl}\n    //                       keepMounted\n    //                       open={Boolean(anchorEl)}\n    //                       onClose={handleClose}\n    //                     >\n    //                       <MenuItem onClick={() => changeCurrentTag('all')}>All</MenuItem>\n    //                       <MenuItem onClick={() => changeCurrentTag('overwatch league')}>Overwatch League</MenuItem>\n    //                       <MenuItem onClick={() => changeCurrentTag('power rankings')}>Power Rankings</MenuItem>\n    //                       <MenuItem onClick={() => changeCurrentTag('run it back')}>Run It Back</MenuItem>\n    //                       <MenuItem onClick={() => changeCurrentTag('overwatch world cup')}>Overwatch World Cup</MenuItem>\n    //                     </Menu>\n    //                   </Grid>\n    //                 </Toolbar>\n    //               </AppBar>\n    //             </ElevationScroll>\n    //     <br />\n    //     <br />\n    //     <br />\n    //     <br />\n    //     <br />\n    //     <Container>\n    //       <Grid containter spacing={3}>\n    //         <Grid item xs={12}>\n    //           {/* {generateFullPageArticleCard(localStorage.getItem('article'))} */}\n    //         </Grid>\n    //       </Grid>\n    //     </Container>\n    //     <br />\n    //     <br />\n    //     <br />\n    //     <Container style={{textAlign: 'center'}}>\n    //       {footer()}\n    //       <br />\n    //     </Container>\n    //   </div>\n    // )\n  // }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}